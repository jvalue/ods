@baseURL = http://localhost:9000/api

### Create a datasource for PegelOnline mirror
POST {{baseURL}}/adapter/datasources  HTTP/1.1
Content-Type: application/json

{
  "protocol": {
    "type": "HTTP",
    "parameters": {
      "location": "https://www.pegelonline.wsv.de/webservices/rest-api/v2/stations.json?includeTimeseries=true&includeCurrentMeasurement=true",
      "encoding": "UTF-8"
    }
  },
  "format": {
    "type": "JSON",
    "parameters": {}
  },
  "trigger": {
    "firstExecution": "2018-10-07T01:32:00.123Z",
    "periodic": true,
    "interval": 60000
  },
  "metadata": {
    "author": "icke",
    "license": "none"
  }
}

### Create a pipeline for whole mirrored PegelOnline
POST {{baseURL}}/pipelines  HTTP/1.1
Content-Type: application/json

{
  "datasourceId": {{datasourceid}},
  "transformation": {
    "func": "data.forEach((x) => { var currentMeasurement = x.timeseries[0].currentMeasurement; currentMeasurement.value /= 100; currentMeasurement.unit = 'm'; x.timeseries = undefined; x.currentMeasurement = currentMeasurement;}); return data;"
  },
  "metadata": {
    "author": "icke",
    "license": "none"
  },
}


### Create a pipeline for PegelOnline mirror -> Cuxhaven
POST {{baseURL}}/core/pipelines  HTTP/1.1
Content-Type: application/json

{
  "datasourceId": {{datasourceid}},
  "transformation": {
    "func": "var data = data[0].data; var dataCuxhaven = data.filter((x) => x.shortname.toLowerCase().includes('cuxhaven')); return dataCuxhaven;"
  },
  "metadata": {
    "author": "icke",
    "license": "none"
  },
}
