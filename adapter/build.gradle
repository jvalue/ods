plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

def props = new Properties()
file("src/main/resources/application.properties").withInputStream { props.load(it)}

group = 'org.jvalue.ods'
version = props.getProperty("app.version")
sourceCompatibility = '14'

task testProps {
	doFirst {
		println version
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
}

test {
  useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"

		afterSuite { desc, result ->
			if (!desc.parent) {
				println "Tests run: ${result.testCount}, " +
						"Failures: ${result.failedTestCount}, " +
						"Skipped: ${result.skippedTestCount}"
			}
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv'
	implementation 'org.postgresql:postgresql'


  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage:junit-vintage-engine'
  }
}
